const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/LandingPage-P78dUI3X.js","assets/vendor-B8hWb8lf.js","assets/vendor-libs-BUKHmL5v.js","assets/Navbar-gTPHZHyK.js","assets/framer-CjQtnr63.js","assets/Footer-5IK8grUG.js","assets/firebase-DrKyEM-o.js","assets/UserDashboard-C-XjkPeT.js","assets/AIHealthAssistant-rGApX4EK.js","assets/geminiService-DKIwBfzq.js","assets/utils-BpRkNtKl.js","assets/MedicalHistoryPage-DJz1ls4o.js","assets/Signup-D3SHvfgT.js","assets/Login-DrpXgsa4.js","assets/UserLayout-4yIT4mTj.js","assets/DoctorLayout-CkoUCSOt.js","assets/DoctorDashboard-DJokdeQH.js","assets/PatientProfilePage-5zv91Vs0.js","assets/EditProfile-gzZT1Zk6.js","assets/ui-jvWLxt96.js","assets/Onboarding-BFo7U6W7.js","assets/Profile-DnlvBmQS.js"])))=>i.map(i=>d[i]);
import{r as l,j as a,N as C,u as B,c as $,d as v,e as Y,B as W}from"./vendor-B8hWb8lf.js";import{i as H,g as K,a as Q,d as D,b as x,c as b,q as L,w as j,e as T,s as O,f as X,u as N,o as Z,h as G,j as J,k as ee,l as re,m as M,n as te}from"./firebase-DrKyEM-o.js";import"./vendor-libs-BUKHmL5v.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();const se="modulepreload",oe=function(t){return"/"+t},q={},E=function(r,e,o){let s=Promise.resolve();if(e&&e.length>0){let c=function(d){return Promise.all(d.map(y=>Promise.resolve(y).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),f=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));s=c(e.map(d=>{if(d=oe(d),d in q)return;q[d]=!0;const y=d.endsWith(".css"),h=y?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${h}`))return;const p=document.createElement("link");if(p.rel=y?"stylesheet":se,y||(p.as="script"),p.crossOrigin="",p.href=d,f&&p.setAttribute("nonce",f),document.head.appendChild(p),y)return new Promise((A,m)=>{p.addEventListener("load",A),p.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${d}`)))})}))}function n(c){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=c,window.dispatchEvent(i),!i.defaultPrevented)throw c}return s.then(c=>{for(const i of c||[])i.status==="rejected"&&n(i.reason);return r().catch(n)})},ae={apiKey:"AIzaSyDpeisD1tArmExEdsn46D2QbOZWz_XSCr0",authDomain:"healsync-801eb.firebaseapp.com",projectId:"healsync-801eb",storageBucket:"healsync-801eb.firebasestorage.app",messagingSenderId:"702905905248",appId:"1:702905905248:web:dcfdd9933dac76c9475305"},F=H(ae),_=K(F),u=Q(F);function ne(){const t="BCDFGHJKLMNPQRSTVWXYZ",r="AEIOU";let e="";for(let s=0;s<4;s++)s%2===0?e+=t[Math.floor(Math.random()*t.length)]:e+=r[Math.floor(Math.random()*r.length)];const o=Math.floor(1e3+Math.random()*9e3);return`DR-${e}-${o}`}async function ce(t){try{const r=b(u,"users"),e=L(r,j("doctorId","==",t));return!(await T(e)).empty}catch(r){throw console.error("Error checking doctor ID:",r),r}}async function ie(){let t,r=0;const e=10;do if(t=ne(),r++,r>=e)throw new Error("Unable to generate unique doctor ID after multiple attempts");while(await ce(t));return t}function le(t){return/^DR-[BCDFGHJKLMNPQRSTVWXYZAEIOU]{4}-\d{4}$/.test(t)}async function ue(t){try{if(!le(t))throw new Error("Invalid doctor ID format");const r=b(u,"users"),e=L(r,j("doctorId","==",t),j("role","==","doctor")),o=await T(e);if(o.empty)return null;const s=o.docs[0];return{id:s.id,...s.data()}}catch(r){throw console.error("Error finding doctor by ID:",r),r}}async function Te(t,r){try{const e=t.split("_");if(e.length!==2)return{success:!1,error:"Invalid share link format."};const[o,s]=e;if(o!==r)return{success:!1,error:"You are not authorized to view this patient's profile."};const n=D(u,"shared_profiles",t),c=await x(n);if(!c.exists())return{success:!1,error:"Shared profile not found."};const i=c.data();return i.doctorId!==r?{success:!1,error:"You are not authorized to view this patient's profile."}:i.status!=="active"?{success:!1,error:"This patient profile is no longer shared with you."}:{success:!0,data:i}}catch(e){return console.error("Error fetching shared profile record:",e),{success:!1,error:"Failed to load patient profile. Please try again."}}}async function Oe(t){try{const r=D(u,"users",t),e=await x(r);if(e.exists()){const o=e.data();return{success:!0,data:{name:o.name||"Unknown Patient",email:o.email||""}}}else return{success:!1,error:"Patient information not found."}}catch(r){return console.error("Error fetching patient basic info:",r),{success:!1,error:"Failed to load patient information."}}}async function Ce(t){try{const r=b(u,"shared_profiles"),e=L(r,j("doctorId","==",t),j("status","==","active")),o=await T(e),s=[];return o.forEach(n=>{s.push({id:n.id,...n.data()})}),{success:!0,data:s}}catch(r){return console.error("Error fetching shared profiles:",r),{success:!1,error:r.message}}}async function Ne(t){try{const r=D(u,"userProfile",t),e=await x(r);return e.exists()?{success:!0,data:e.data()}:{success:!1,error:"Patient profile not found."}}catch(r){return console.error("Error fetching patient profile:",r),{success:!1,error:"Failed to load patient profile."}}}async function Me(t,r,e){try{const o=`${t}_${r}`,s=D(u,"shared_profiles",o),n=await x(s);if(!n.exists())return{success:!1,error:"You don't have access to this patient's profile."};const c=n.data();if(c.status!=="active"||c.doctorId!==t)return{success:!1,error:"Your access to this patient's profile has been revoked or is invalid."};const i=D(u,"users",t),f=await x(i);if(!f.exists())return{success:!1,error:"Doctor information not found."};const d=f.data(),y={patientId:r,doctorId:t,doctorIdCode:c.doctorIdCode,doctorName:c.doctorName||d.name,visitDate:e.visitDate,symptoms:e.symptoms||[],diagnosis:e.diagnosis||"",medicines:e.medicines||[],prescribedTests:e.prescribedTests||[],followUpNotes:e.followUpNotes||"",...e.fileName&&{fileName:e.fileName,fileType:e.fileType,fileUrl:e.fileUrl},createdAt:O(),lastModifiedAt:O(),createdBy:t,shareRecordId:o,isActive:!0},h=b(u,"medicalRecords");return{success:!0,recordId:(await X(h,y)).id,message:"Medical record added successfully."}}catch(o){return console.error("Error adding medical record:",o),{success:!1,error:"Failed to add medical record. Please try again."}}}async function qe(t,r,e){try{const o=D(u,"medicalRecords",t),s=await x(o);if(!s.exists())return{success:!1,error:"Medical record not found."};const n=s.data(),c=D(u,"shared_profiles",n.shareRecordId),i=await x(c);if(!i.exists()||i.data().status!=="active")return{success:!1,error:"You don't have access to this patient's profile."};if(n.createdBy!==r)return{success:!1,error:"You can only update medical records you created."};const f=n.createdAt;let d;if(f&&f.seconds)d=f.seconds*1e3;else if(typeof f=="number")d=f;else return{success:!1,error:"Cannot verify record creation time. Update not allowed."};const y=Date.now(),h=30*60*1e3;if(y-d>h)return{success:!1,error:"Medical record cannot be updated after 30 minutes of creation."};const p={...e,lastModifiedAt:O()};return await N(o,p),{success:!0,message:"Medical record updated successfully."}}catch(o){return console.error("Error updating medical record:",o),{success:!1,error:"Failed to update medical record."}}}async function ke(t,r,e=null,o=20){try{const s=`${t}_${r}`,n=D(u,"shared_profiles",s),c=await x(n);if(!c.exists()||c.data().status!=="active")return{success:!1,error:"You don't have access to this patient's profile."};const i=b(u,"medicalRecords"),f=L(i,j("patientId","==",r)),d=await T(f),y=[];d.forEach(m=>{y.push({id:m.id,...m.data()})});const h=y.filter(m=>m.isActive!==!1);h.sort((m,g)=>{var P,R,S,U;const w=new Date(m.visitDate||((R=(P=m.createdAt)==null?void 0:P.toDate)==null?void 0:R.call(P))||0);return new Date(g.visitDate||((U=(S=g.createdAt)==null?void 0:S.toDate)==null?void 0:U.call(S))||0)-w});const p=h.slice(0,o),A=h.length>o;return{success:!0,data:p,pagination:{hasMore:A,lastDoc:null,currentPageSize:p.length,requestedPageSize:o}}}catch(s){return console.error("Error fetching medical records:",s),{success:!1,error:"Failed to fetch medical records."}}}const V=l.createContext(),de=({children:t})=>{const[r,e]=l.useState(null),[o,s]=l.useState(null),[n,c]=l.useState(null),[i,f]=l.useState(!0);l.useEffect(()=>{const m=Z(_,async g=>{g?(e(g),await d(g.uid)):(e(null),s(null),c(null)),f(!1)});return()=>m()},[]);const d=async m=>{try{const g=D(u,"users",m),w=await x(g);if(w.exists()){const I=w.data();s(I.role);const P=D(u,"userProfile",m),R=await x(P);R.exists()?c({...I,...R.data()}):c(I)}}catch(g){console.error("Error fetching user profile:",g)}},y=async(m,g,w,I)=>{try{const P=await ee(_,g,w);await re(P.user,{displayName:m});let R=null;I==="doctor"&&(R=await ie());const S=D(u,"users",P.user.uid),U={name:m,email:g,role:I,createdAt:new Date().toISOString(),onboardingCompleted:!1};return R&&(U.doctorId=R),await M(S,U),s(I),c({...U,onboardingCompleted:!1}),P}catch(P){throw console.error("Signup error:",P),P}},h=async(m,g)=>{try{return await J(_,m,g)}catch(w){throw console.error("Login error:",w),w}},p=async()=>{await G(_),e(null),s(null),c(null)},A=async()=>{r!=null&&r.uid&&await d(r.uid)};return a.jsx(V.Provider,{value:{user:r,userRole:o,userProfile:n,loading:i,signup:y,login:h,logout:p,refreshUserProfile:A},children:t})},fe=()=>l.useContext(V);function k({children:t,requiredRole:r}){const{user:e,userRole:o,loading:s}=fe();return s?a.jsx("div",{className:"text-center py-10",children:"Loading..."}):e?r&&o!==r?o==="doctor"?a.jsx(C,{to:"/doctor"}):o==="user"?a.jsx(C,{to:"/user"}):a.jsx(C,{to:"/"}):t:a.jsx(C,{to:"/login"})}const he=l.lazy(()=>E(()=>import("./LandingPage-P78dUI3X.js"),__vite__mapDeps([0,1,2,3,4,5,6]))),pe=l.lazy(()=>E(()=>import("./UserDashboard-C-XjkPeT.js"),__vite__mapDeps([7,1,2,6,4,8,9,10]))),me=l.lazy(()=>E(()=>import("./MedicalHistoryPage-DJz1ls4o.js"),__vite__mapDeps([11,1,2,6]))),ge=l.lazy(()=>E(()=>import("./Signup-D3SHvfgT.js"),__vite__mapDeps([12,1,2,3,4,6]))),ye=l.lazy(()=>E(()=>import("./Login-DrpXgsa4.js"),__vite__mapDeps([13,1,2,6,3,4]))),De=l.lazy(()=>E(()=>import("./UserLayout-4yIT4mTj.js"),__vite__mapDeps([14,1,2,6,9,10,3,4,5]))),we=l.lazy(()=>E(()=>import("./DoctorLayout-CkoUCSOt.js"),__vite__mapDeps([15,1,2,3,4,5,6]))),Pe=l.lazy(()=>E(()=>import("./DoctorDashboard-DJokdeQH.js"),__vite__mapDeps([16,1,2,6,8,9,10]))),xe=l.lazy(()=>E(()=>import("./PatientProfilePage-5zv91Vs0.js"),__vite__mapDeps([17,1,2,6]))),ve=l.lazy(()=>E(()=>import("./EditProfile-gzZT1Zk6.js"),__vite__mapDeps([18,1,2,19,6]))),Ee=l.lazy(()=>E(()=>import("./Onboarding-BFo7U6W7.js"),__vite__mapDeps([20,1,2,6,19]))),_e=l.lazy(()=>E(()=>import("./Profile-DnlvBmQS.js"),__vite__mapDeps([21,1,2,6])).then(t=>({default:t.Profile}))),Re=()=>a.jsx("div",{className:"flex items-center justify-center min-h-screen bg-background",children:a.jsx("div",{className:"w-8 h-8 border-4 border-primary border-t-transparent rounded-full animate-spin"})}),je=()=>{const t=B();return l.useLayoutEffect(()=>{"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual"),window.scrollTo({top:0,left:0,behavior:"auto"}),document.documentElement.scrollTop=0,document.body.scrollTop=0,Promise.resolve().then(()=>{window.scrollTo({top:0,left:0,behavior:"auto"}),document.documentElement.scrollTop=0,document.body.scrollTop=0})},[t.pathname]),null},Ie=()=>{const t=B(),[r,e]=l.useState(1),o=l.useRef(t.pathname);return l.useEffect(()=>{const s=o.current,n=t.pathname;e(n.length>s.length?1:-1),o.current=n},[t]),a.jsxs("div",{className:"relative min-h-screen w-full bg-background text-text",children:[a.jsx(je,{}),a.jsx(l.Suspense,{fallback:a.jsx(Re,{}),children:a.jsxs($,{location:t,children:[a.jsx(v,{path:"/",element:a.jsx(he,{})}),a.jsx(v,{path:"/signup",element:a.jsx(ge,{})}),a.jsx(v,{path:"/login",element:a.jsx(ye,{})}),a.jsxs(v,{path:"/user",element:a.jsx(k,{children:a.jsx(De,{})}),children:[a.jsx(v,{index:!0,element:a.jsx(pe,{})}),a.jsx(v,{path:"onboarding",element:a.jsx(Ee,{})}),a.jsx(v,{path:"medical-history",element:a.jsx(me,{})}),a.jsx(v,{path:"edit-profile",element:a.jsx(ve,{})}),a.jsx(v,{path:"view-profile",element:a.jsx(_e,{})})]}),a.jsxs(v,{path:"/doctor",element:a.jsx(k,{children:a.jsx(we,{})}),children:[a.jsx(v,{index:!0,element:a.jsx(Pe,{})}),a.jsx(v,{path:"shared-profile/:shareId",element:a.jsx(xe,{})})]})]},t.pathname)})]})};async function ze(t,r){try{return console.log("Attempting to save to Firestore:",{userId:t,profileData:r}),console.log("Current auth user:",_.currentUser),console.log("Auth state:",_.currentUser?"authenticated":"not authenticated"),await M(D(u,"userProfile",t),r,{merge:!0}),console.log("Successfully saved to Firestore"),{success:!0}}catch(e){return console.error("Error adding/updating user profile:",e),console.error("Error details:",e.code,e.message),{success:!1,error:e.message}}}async function z(t){try{const r=D(u,"userProfile",t),e=await x(r);return e.exists()?{success:!0,data:e.data()}:{success:!1,error:"User profile not found"}}catch(r){return console.error("Error fetching user profile:",r),{success:!1,error:r.message}}}async function Be(t,r){try{return await N(D(u,"userProfile",t),r),{success:!0}}catch(e){return console.error("Error editing user profile:",e),{success:!1,error:e.message}}}async function Fe(t,r){try{const e=await ue(r);if(!e)return{success:!1,error:"Doctor not found. Please check the Doctor ID and try again."};const o=e.id,s=`${o}_${t}`,n=D(u,"shared_profiles",s),c=await x(n);if(c.exists()&&c.data().status==="active")return{success:!1,error:"Profile already shared with this doctor."};const i={patientId:t,doctorId:o,doctorIdCode:r,doctorName:e.name||"Unknown Doctor",sharedAt:O(),status:"active"},f=D(u,"shared_profiles",s);return await M(f,i),{success:!0,shareId:s,doctorName:e.name}}catch(e){return console.error("Error sharing profile with doctor:",e),{success:!1,error:e.message}}}async function Ve(t){try{const r=b(u,"shared_profiles"),e=L(r,j("patientId","==",t),j("status","==","active")),o=await T(e),s=[];return o.forEach(n=>{s.push({id:n.id,...n.data()})}),{success:!0,data:s}}catch(r){return console.error("Error fetching patient shared profiles:",r),{success:!1,error:r.message}}}async function $e(t,r){try{const e=`${r}_${t}`,o=D(u,"shared_profiles",e);return(await x(o)).exists()?(await N(o,{status:"revoked",revokedAt:O()}),{success:!0,message:"Profile access successfully revoked."}):{success:!1,error:"Share record not found."}}catch(e){return console.error("Error revoking profile access:",e),{success:!1,error:e.message}}}async function Ye(t,r=null,e=20,o=!1){try{const s=b(u,"medicalRecords");let n=L(s,j("patientId","==",t),te(e));const c=await T(n),i=[];let f=null;c.forEach(h=>{const p=h.data();!o&&p.isActive===!1||(i.push({id:h.id,...p}),f=h)});const d=i.sort((h,p)=>{var g,w;const A=new Date(h.visitDate||((g=h.createdAt)==null?void 0:g.toDate())||0);return new Date(p.visitDate||((w=p.createdAt)==null?void 0:w.toDate())||0)-A}),y=i.length===e;return{success:!0,data:d,hasMore:y,lastDoc:f}}catch(s){return console.error("Error fetching patient medical records:",s),s.code==="failed-precondition"?{success:!1,error:"Database index not ready. Please try again in a moment."}:{success:!1,error:s.message||"Failed to fetch medical records."}}}const Ae=l.createContext();function be({children:t}){const[r,e]=l.useState(null),[o,s]=l.useState(!0),n=l.useCallback(async()=>{if(!_.currentUser){console.log("No user ID found");return}console.log("Refreshing user profile"),s(!0);try{const c=await z(_.currentUser.uid);e({uid:_.currentUser.uid,...c})}catch(c){console.error("Error refreshing user profile:",c)}finally{s(!1)}},[]);return l.useEffect(()=>{const c=_.onAuthStateChanged(async i=>{if(s(!0),i){const f=await z(i.uid);e({uid:i.uid,...f})}else e(null);s(!1)});return()=>c()},[]),a.jsx(Ae.Provider,{value:{userProfileState:r,refreshUserProfile:n,loading:o},children:t})}Y.createRoot(document.getElementById("root")).render(a.jsx(l.StrictMode,{children:a.jsx(W,{children:a.jsx(de,{children:a.jsx(be,{children:a.jsx(Ie,{})})})})}));export{Ve as a,Ye as b,Ce as c,u as d,Te as e,Oe as f,z as g,Ne as h,ke as i,Me as j,qe as k,Be as l,ze as m,$e as r,Fe as s,fe as u};
