import{G as u}from"./utils-BpRkNtKl.js";class A{constructor(){if(this.apiKey="AIzaSyB5DLN-62BqX98qn8IUMPYotTJpuuiww6o",this.modelName="gemini-1.5-flash",this.isEnabled=!0,!this.apiKey&&this.isEnabled){console.warn("Gemini API key not configured. AI features will be disabled."),this.isEnabled=!1;return}if(this.isEnabled)try{this.genAI=new u(this.apiKey),this.model=this.genAI.getGenerativeModel({model:this.modelName,generationConfig:{temperature:.7,topK:1,topP:1,maxOutputTokens:2048},safetySettings:[{category:"HARM_CATEGORY_HARASSMENT",threshold:"BLOCK_MEDIUM_AND_ABOVE"},{category:"HARM_CATEGORY_HATE_SPEECH",threshold:"BLOCK_MEDIUM_AND_ABOVE"},{category:"HARM_CATEGORY_SEXUALLY_EXPLICIT",threshold:"BLOCK_MEDIUM_AND_ABOVE"},{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_MEDIUM_AND_ABOVE"}]}),console.log("Gemini AI service initialized successfully")}catch(e){console.error("Failed to initialize Gemini AI:",e),this.isEnabled=!1}}isServiceAvailable(){return this.isEnabled&&this.model}async generateResponse(e,i=[]){var r,t,o;if(!this.isServiceAvailable())throw new Error("Gemini AI service is not available");try{const a=`${i.map(c=>`${c.role==="user"?"Human":"Assistant"}: ${c.content}`).join(`
`)}
Human: ${e}
Assistant:`;return{success:!0,content:(await(await this.model.generateContent(a)).response).text(),usage:{promptTokens:0,completionTokens:0,totalTokens:0}}}catch(s){throw console.error("Error generating AI response:",s),(r=s.message)!=null&&r.includes("API_KEY")?new Error("AI service authentication failed. Please check configuration."):(t=s.message)!=null&&t.includes("RATE_LIMIT")?new Error("AI service is temporarily busy. Please try again in a moment."):(o=s.message)!=null&&o.includes("SAFETY")?new Error("Your request was blocked by safety filters. Please rephrase your question."):new Error("AI service is currently unavailable. Please try again later.")}}async generateStreamResponse(e,i=[],r){if(!this.isServiceAvailable())throw new Error("Gemini AI service is not available");try{const o=`${i.map(n=>`${n.role==="user"?"Human":"Assistant"}: ${n.content}`).join(`
`)}
Human: ${e}
Assistant:`,s=await this.model.generateContentStream(o);let a="";for await(const n of s.stream){const l=n.text();a+=l,r&&r(l)}return{success:!0,content:a}}catch(t){throw console.error("Error generating streaming AI response:",t),t}}async testConnection(){if(!this.isServiceAvailable())return{success:!1,error:"Service not available"};try{const i=await this.generateResponse("Hello, please respond with 'AI service is working correctly'");return{success:!0,message:"Connection successful"}}catch(e){return{success:!1,error:e.message}}}}const g=new A;export{g};
